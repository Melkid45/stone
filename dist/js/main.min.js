/**
 * @name		Shuffle Letters
 * @author		Martin Angelov
 * @version 	1.0
 * @url			http://tutorialzine.com/2011/09/shuffle-letters-effect-jquery/
 * @license		MIT License
 */

(function ($) {

    $.fn.shuffleLetters = function (prop) {

        var options = $.extend({
            "step": 4,			// How many times should the letters be changed
            "fps": 35,			// Frames Per Second
            "text": "", 			// Use this text instead of the contents
            "callback": function () { }	// Run once the animation is complete
        }, prop)

        return this.each(function () {

            var el = $(this),
                str = "";


            // Preventing parallel animations using a flag;

            if (el.data('animated')) {
                return true;
            }

            el.data('animated', true);


            if (options.text) {
                str = options.text.split('');
            }
            else {
                str = el.text().split('');
            }

            // The types array holds the type for each character;
            // Letters holds the positions of non-space characters;

            var types = [],
                letters = [];

            // Looping through all the chars of the string

            for (var i = 0; i < str.length; i++) {

                var ch = str[i];

                if (ch == " ") {
                    types[i] = "space";
                    continue;
                }
                else if (/[a-z]/.test(ch)) {
                    types[i] = "lowerLetter";
                }
                else if (/[A-Z]/.test(ch)) {
                    types[i] = "upperLetter";
                }
                else {
                    types[i] = "symbol";
                }

                letters.push(i);
            }

            el.html("");

            // Self executing named function expression:

            (function shuffle(start) {

                // This code is run options.fps times per second
                // and updates the contents of the page element

                var i,
                    len = letters.length,
                    strCopy = str.slice(0);	// Fresh copy of the string

                if (start > len) {

                    // The animation is complete. Updating the
                    // flag and triggering the callback;

                    el.data('animated', false);
                    options.callback(el);
                    return;
                }

                // All the work gets done here
                for (i = Math.max(start, 0); i < len; i++) {

                    // The start argument and options.step limit
                    // the characters we will be working on at once

                    if (i < start + options.step) {
                        // Generate a random character at thsi position
                        strCopy[letters[i]] = randomChar(types[letters[i]]);
                    }
                    else {
                        strCopy[letters[i]] = "";
                    }
                }

                el.text(strCopy.join(""));

                setTimeout(function () {

                    shuffle(start + 1);

                }, 1000 / options.fps);

            })(-options.step);


        });
    };

    function randomChar(type) {
        var pool = "";

        if (type == "lowerLetter") {
            pool = "abcdefghijklmnopqrstuvwxyz0123456789";
        }
        else if (type == "upperLetter") {
            pool = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        }
        else if (type == "symbol") {
            pool = ",.?/\\(^)![]{}*&^%$#'\"0123456789";
        }

        var arr = pool.split('');
        return arr[Math.floor(Math.random() * arr.length)];
    }

})(jQuery);

if (document.querySelector('.about')) {
    $('.about-attr .item span').each(function (e) {
        let text = $(this).text()
        $(this).text('')
        setTimeout(() => {
            $(this).shuffleLetters({
                "text": text,
                "stepDelay": 30,
                "timeOffset": 50,
            })
        }, e * 300);
    })
}


// Adaptation




let scrollTrigger;
// Lenis
ScrollTrigger.config({
    limitCallbacks: true,
    ignoreMobileResize: true,
    autoRefreshEvents: 'visibilitychange,DOMContentLoaded,load'
})
const lenis = new Lenis({
    autoRaf: true,
    lerp: 0.1,
    smoothTouch: false,
})
let isDesktop = $(window).width() > 780;
function raf(time) {
    lenis.raf(time)
    ScrollTrigger.update() // Обновляем ScrollTrigger
    requestAnimationFrame(raf)
}
if (isDesktop) {

} else {
    $('.work-preview .preview-video').remove()
    $('.information-tags').remove()
    $('.wrap-services-video').remove()
    $('.our-services-frame .item .services-video').remove()
}
requestAnimationFrame(raf)
// Body


let heightFooter = document.querySelector('.footer').clientHeight
$('body').css({
    'padding-bottom': heightFooter
})
lenis.raf(0);
// Works

$('.works__body-information-choose button').on('click', function () {
    let CurrentIndex = $(this).index()
    $(this).addClass('current')
    $('.works__body-information-choose button').not(this).removeClass('current')
    $('.works-frame-sction').each(function (e) {
        if ($(this).index() == CurrentIndex) {
            $(this).addClass('current')
        } else {
            $(this).removeClass('current')
        }
    })
})


// Showreel


function updateMarqueeAnimation() {
    const marqueeContainer = document.getElementById('marqueeContainer');
    const strokeItems = document.querySelectorAll('.showreel-partners-stroke');

    if (!marqueeContainer || strokeItems.length === 0) return;

    const itemWidth = strokeItems[0].scrollWidth;
    const containerWidth = marqueeContainer.parentElement.offsetWidth;

    const gap = parseFloat(getComputedStyle(marqueeContainer).gap) || 0;
    const totalItemWidth = itemWidth + gap;

    const translateValue = -(totalItemWidth / containerWidth * 100);

    let style = document.getElementById('dynamic-marquee');
    if (!style) {
        style = document.createElement('style');
        style.id = 'dynamic-marquuee';
        document.head.appendChild(style);
    }

    style.innerHTML = `
        @keyframes animPartners {
            0% { 
                transform: translateX(0);
                opacity: 1;
            }
            95% {
                opacity: 1;
            }
            100% { 
                transform: translateX(${translateValue}%);
                opacity: 1;
            }
        }
        
        .stroke {
            animation-fill-mode: both;
        }
    `;

    marqueeContainer.style.animation = 'none';
    setTimeout(() => {
        marqueeContainer.style.animation = '';
    }, 10);
}

document.getElementById('marqueeContainer')?.addEventListener('animationiteration', function () {
    this.style.opacity = '1';
});

let resizeTimeout;
function debouncedUpdate() {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(updateMarqueeAnimation, 250);
}

document.addEventListener('DOMContentLoaded', function () {
    setTimeout(updateMarqueeAnimation, 1000);
    updateMarqueeAnimation();
});

window.addEventListener('resize', debouncedUpdate);


// if (isDesktop) {
//     gsap.set('.showreel__body-video', { yPercent: -50, scale: 0.5 })
//     gsap.to('.showreel__body-video', {
//         yPercent: 0,
//         scale: 1,
//         ease: 'power1',
//         scrollTrigger: {
//             trigger: '.showreel',
//             scrub: true,
//             start: 'top bottom',
//             end: 'bottom bottom',
//         }
//     })
// }


// Селебы
if (document.querySelector('.celebrities')) {
    let celebritiesSplide = new Splide('.celebrities-splide', {
        type: 'loop',
        perMove: 1,
        pagination: false,
        arrows: false,
        autoplay: true,
        interval: 3000,
        pauseOnHover: false,
    }
    );
    celebritiesSplide.mount();
}

// Header

if (isDesktop) {
    $('.header-menu-open').on('click', function (e) {
        $('.header__menu').addClass('opened')
    })
    $('.navigation-close').on('click', function (e) {
        $('.header__menu').removeClass('opened')
    })
} else {
    $('.header-menu-open').on('click', function (e) {
        $('.header__menu').toggleClass('opened')
        $(this).toggleClass('opened')
    })
}

window.addEventListener("load", () => {
    lenis.scrollTo(0, { immediate: true });
});

let lastScrollTop = 0;
let isScrollingDown = false;
const scrollThreshold = 5;
const activationThreshold = 50;
lenis.on('scroll', ({ scroll }) => {
    ScrollTrigger.update();
    currentScroll = scroll;
    const header = document.querySelector('.header');
    if (currentScroll >= 2000 && document.querySelector('.showreel') && isDesktop) {
        $('.footer').css({
            bottom: 0
        })
    } else if (currentScroll < 2000 && document.querySelector('.showreel') && isDesktop) {
        $('.footer').css({
            bottom: '-100%'
        })
    }
    if (Math.abs(currentScroll - lastScrollTop) > scrollThreshold) {
        isScrollingDown = currentScroll > lastScrollTop;
        lastScrollTop = currentScroll;
    }

    if (isScrollingDown && currentScroll > activationThreshold) {
        header.classList.add('back');
    } else {
        header.classList.remove('back');
    }
});


//Team


if (document.querySelector('.team-splide')) {
    var splide = new Splide('.team-splide', {
        type: 'loop',
        perPage: 4,
        perMove: 1,
        pagination: false,
    });

    splide.mount();
}


// Bakstage + allItems
let AnimItems = document.querySelectorAll('.transform-item')

gsap.set(document.querySelectorAll('.transform-item img'), {
    yPercent: -10
});
gsap.utils.toArray(AnimItems).forEach((item, index) => {
    let img = item.querySelector('img')
    if (img) {
        gsap.to(img, {
            yPercent: 10,
            duration: 1,
            ease: "expo.InOut",
            scrollTrigger: {
                trigger: item,
                start: 'top bottom',
                end: '+=200%',
                scrub: true,
            }
        })
    }
})


//Works


// Создаем объект для хранения твинов
const itemTweens = {};

$('.project-filter-main button').on('click', function (e) {
    let index = $(this).index();
    $(this).addClass('current').siblings().removeClass('current');
    $('.project-filter-soft .item').each(function (i) {
        const item = $(this);
        const itemIndex = item.index();
        const buttons = item.find('button');
        if (itemTweens[itemIndex]) {
            itemTweens[itemIndex].kill();
        }
        if (itemIndex === index) {
            item.addClass('current');

            itemTweens[itemIndex] = gsap.to(buttons, {
                opacity: 0.6,
                duration: 0.6,
                stagger: 0.2,
                ease: 'sine.out',
                overwrite: 'auto',
                onComplete: function () {
                    buttons.first().addClass('current');
                }
            });
        } else {
            item.removeClass('current');
            buttons.removeClass('current');
            gsap.set(buttons, {
                opacity: 0
            });
        }
    });
});
$('.project-filter-soft button').on('click', function (e) {
    $(this).toggleClass('current')
})
let ButtonsItem = document.querySelectorAll('.project-filter-soft .item')
gsap.utils.toArray(ButtonsItem).forEach((item, index) => {
    let buttons = item.querySelectorAll('button');
    if (index == 0) {
        return;
    }
    gsap.set(buttons, {
        opacity: 0
    })
})


// About

$('.list-item').on('click', function (e) {
    if ($(this).hasClass('current')) {
        $(this).next('.list-item').addClass('current')
        $(this).removeClass('current')
        if ($(this).next('.list-item').length == 0) {
            $(this).removeClass('current')
            $('.list-item').first().addClass('current')
        }
    } else {
        $(this).addClass('current')
        $('.list-item').not(this).removeClass('current')
    }
})



// Order

let orderWindow = document.querySelector('.order')
$('.order-open').on('click', function (e) {
    $('.order').fadeIn(300)
})

$('.close-order').on('click', function (e) {
    $('.order').fadeOut(300)
})


// All Video


document.addEventListener('DOMContentLoaded', function () {
    const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    const workItems = document.querySelectorAll('.work, .services-frame-item, .project-wrap .item, .our-services-frame .item');

    // ====== Кэш видео и постеров ======
    const loadedVideos = new Map(); // src -> HTMLVideoElement
    const generatedPosters = new Map(); // src -> poster URL

    // ====== Постер из видео ======
    window.generatePosterFromVideo = function(video) {
        return new Promise((resolve, reject) => {
            const src = video.querySelector('source')?.dataset.src || video.src;
            if (!src) { reject("Нет src"); return; }

            if (generatedPosters.has(src)) {
                resolve(generatedPosters.get(src));
                video.setAttribute('poster', generatedPosters.get(src));
                return;
            }

            const capture = () => {
                const canvas = document.createElement('canvas');
                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                const ctx = canvas.getContext('2d');
                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

                try {
                    canvas.toBlob(blob => {
                        if (!blob) { reject("Blob не создан"); return; }
                        const url = URL.createObjectURL(blob);
                        video.setAttribute('poster', url);
                        generatedPosters.set(src, url);
                        resolve(url);
                    }, 'image/jpeg', 0.8);
                } catch(e) { reject(e); }
            };

            if (video.readyState >= 2) capture();
            else video.addEventListener('loadeddata', capture, { once: true });
        });
    };

    // ====== Безопасный play ======
    function safePlay(video) {
        return new Promise(resolve => {
            if (video.readyState >= 3) video.play().then(resolve).catch(resolve);
            else video.addEventListener("canplaythrough", () => video.play().then(resolve).catch(resolve), { once: true });
        });
    }

    // ====== Инициализация видео для блока ======
    function initVideosForItem(item) {
        const videos = item.querySelectorAll('.preview-video, .services-video');
        if (!videos.length) return;

        let activeVideo = null;

        videos.forEach(video => {
            const source = video.querySelector('source');
            const src = source?.dataset.src;
            if (src) {
                if (loadedVideos.has(src)) video.src = loadedVideos.get(src).src;
                else {
                    video.src = src;
                    loadedVideos.set(src, video);
                }
            }
            video.load();
            video.pause();
            video.currentTime = 0;
            video.classList.remove('show-video');
            generatePosterFromVideo(video).catch(()=>{});
        });

        const playVideo = (video) => {
            if (activeVideo && activeVideo !== video) pauseVideo(activeVideo);
            video.muted = true;
            safePlay(video);
            video.classList.add('show-video');
            item.setAttribute('data-video-playing', 'true');
            activeVideo = video;
        };

        const pauseVideo = (video) => {
            if (!video) return;
            video.pause();
            video.currentTime = 0;
            video.classList.remove('show-video');
            item.setAttribute('data-video-playing', 'false');
            if (activeVideo === video) activeVideo = null;
        };

        if (!isTouch) {
            item.addEventListener('mouseenter', () => {
                const current = item.querySelector('.show-video') || videos[0];
                playVideo(current);
            });
            item.addEventListener('mouseleave', () => {
                if (activeVideo) pauseVideo(activeVideo);
            });
        }
    }

    workItems.forEach(initVideosForItem);

    // ====== Мобильный scroll observer ======
    if (isTouch) {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                const item = entry.target;
                const video = item.querySelector('.preview-video, .services-video');
                if (!video) return;

                const source = video.querySelector('source');
                const src = source?.dataset.src;
                if (!video.src && src) video.src = loadedVideos.get(src)?.src || src;

                if (entry.isIntersecting) {
                    video.muted = true;
                    safePlay(video);
                    item.setAttribute('data-video-playing', 'true');
                } else {
                    video.pause();
                    item.setAttribute('data-video-playing', 'false');
                }
            });
        }, { threshold: 0.6, rootMargin: '300px 0px' });

        workItems.forEach(item => observer.observe(item));
    }

    // ====== Click по тегам Services ======
    $('.information-tags-tag').on('click', function () {
        const index = $(this).index();
        $(this).addClass('current').siblings().removeClass('current');

        const frameItem = $(this).closest('.services-frame-item')[0];
        const videos = frameItem.querySelectorAll('.wrap-services-video video');

        videos.forEach((vid, i) => {
            const source = vid.querySelector('source');
            const src = source?.dataset.src;

            if (i === index) {
                // Pause все кроме выбранного
                videos.forEach(v => { if(v!==vid) { v.pause(); v.classList.remove('show-video'); } });

                $(vid).addClass('show-video');
                if (!vid.src && src) {
                    vid.src = loadedVideos.get(src)?.src || src;
                    loadedVideos.set(src, vid);
                    vid.load();
                    generatePosterFromVideo(vid).catch(()=>{});
                }
                vid.muted = true;
                safePlay(vid);
            } else {
                vid.pause();
                $(vid).removeClass('show-video');
            }
        });
    });
});













// Preloader
let isPriorityVideoLoaded = false;
let isPageReady = false;

if (document.querySelector('.preloader')) {
    function isMobileDevice() {
        return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    }

    function tryStartAnimation() {
        if (isPriorityVideoLoaded && isPageReady) {
            runPreloaderAnimation();
        }
    }

    function checkPreloaderLoad() {
        const priorityVideo = document.querySelector('.showreel__body-video');

        let timeoutReached = false;

        const forceStart = () => {
            if (!timeoutReached) return;
            isPriorityVideoLoaded = true;
            tryStartAnimation();
        };

        setTimeout(() => {
            timeoutReached = true;
            if (!isPriorityVideoLoaded) {
                console.warn('Timeout reached → продолжаем без видео');
                forceStart();
            }
        }, 7000);

        if (priorityVideo) {
            if (priorityVideo.readyState >= 4) {
                isPriorityVideoLoaded = true;
                tryStartAnimation();
            } else {
                try { priorityVideo.load(); } catch (e) { }
                const videoHandler = () => {
                    isPriorityVideoLoaded = true;
                    tryStartAnimation();
                    priorityVideo.removeEventListener('canplaythrough', videoHandler);
                    priorityVideo.removeEventListener('error', videoHandler);
                };
                priorityVideo.addEventListener('canplaythrough', videoHandler);
                priorityVideo.addEventListener('error', videoHandler);

                // iOS-фикс: если не стартануло — ждём дольше, но не 2 сек
                if (isMobileDevice() && priorityVideo.readyState === 0) {
                    setTimeout(() => {
                        if (!isPriorityVideoLoaded) {
                            console.warn('iOS video load issue → запускаем без него');
                            isPriorityVideoLoaded = true;
                            tryStartAnimation();
                        }
                    }, 4000);
                }
            }
        } else {
            // если видео нет — запускаем сразу
            isPriorityVideoLoaded = true;
            tryStartAnimation();
        }
    }

    // Ждём полной загрузки страницы (DOM + ресурсы)
    window.addEventListener("load", () => {
        isPageReady = true;
        tryStartAnimation();
    });

    let widthText = isDesktop ? 600 : 300;

    function runPreloaderAnimation() {
        const tl = gsap.timeline({ defaults: { ease: "power2.inOut" } });
        tl.to('.last-text', {
            clipPath: 'inset(0 0% 0 0)',
            duration: 1,
            ease: 'power1'
        })
        tl.to(".preloader", {
            opacity: 0,
            duration: 0.8,
            delay: 0.5,
            onComplete: () => document.querySelector(".preloader").style.display = "none"
        });
    }

    checkPreloaderLoad();
}


// Showreel


let showreel = document.querySelector('.showreel__body-wrap')
let showreelVideo = document.querySelector('.showreel__body-video')
let body = document.querySelector('body')
if (showreel && isDesktop) {
    $('.footer').css({
        bottom: '-100%'
    })
    gsap.to(body, {
        background: '#242323',
        scrollTrigger: {
            trigger: showreel,
            scrub: true,
            start: 'top +=30%',
            end: '+=30%',
        }
    })
    gsap.to(showreelVideo, {
        yPercent: -27,
        scale: 0.85,
        ease: 'power1',
        duration: 1,
        scrollTrigger: {
            trigger: showreel,
            scrub: true,
            start: 'top +=30%',
            end: '+=40%',
        }
    })
    gsap.to(body, {
        scrollTrigger: {
            trigger: showreel,
            scrub: true,
            start: 'top +=30%',
            end: '+=200%',
            pin: true,
            pinSpacer: false,
        }
    })
}


// Header Menu


$('.accordion').on('click', function (e) {
    $(this).toggleClass('open')
})


document.addEventListener("DOMContentLoaded", () => {
    const lazyImages = document.querySelectorAll("img[data-src]");

    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                const src = img.dataset.src;

                if (src) {
                    img.src = src;
                    img.removeAttribute("data-src");
                }

                observer.unobserve(img);
            }
        });
    }, {
        rootMargin: "400px 0px", // подгружаем за 400px до попадания
        threshold: 0
    });

    lazyImages.forEach(img => imageObserver.observe(img));
});
